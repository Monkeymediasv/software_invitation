// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String        @id @default(cuid())
  status        UserStatus    @default(INACTIVE)
  role          UserRole      @default(USER)
  gender        Gender        @default(OTHER)
  name          String
  lastname      String?
  email         String        @unique
  image         String?
  emailVerified DateTime?
  accounts      Account[]
  invitation  Invitation[]
  sessions      Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Invitation {
  id                      String            @id @default(cuid())
  tittle                  String
  typeEvent               String
  email                   String            @unique
  place                   String
  dateEvent               DateTime          @default(now())
  address                 String
  userId                  String
  number                  String           @unique
  message                 String? 
  user                    User              @relation(fields: [userId], references: [id])
  category                Category[]
  answers                 Answers[]
}

model Category {
  id                      String            @id @default(cuid())
  name                    String
  invitationId            String
  invitation              Invitation        @relation(fields: [invitationId], references: [id])
}

model Answers {
  id                      String            @id @default(cuid())
  name                    String
  kids                    Int
  adult                   Int
  invitationStatus        InvitationStatus  @default(NO)
  phone                   String 
  invitationId            String
  invitation              Invitation        @relation(fields: [invitationId], references: [id])
}

enum InvitationStatus {
  YES
  MAYBE
  NO
}

enum Gender {
  MALE
  FEMALE
  OTHER
}

enum UserStatus {
  ACTIVE
  INACTIVE
}

enum UserRole {
  ADMIN
  USER
}

